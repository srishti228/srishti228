import sqlite3
from tkinter import *
from tkinter import messagebox
from tkinter import ttk
root =Tk()
root.title("Login Page")
root.geometry("370x200")
root['bg']= 'light blue'
def login():
    username=entry1.get()
    password=entry2.get()
    if(username=="aarushi" and password=="srishti"):
        messagebox.showinfo("","Login Success")
        root.destroy()
        import Page1
    elif(username=="" and password==""):
        messagebox.showinfo("","Blank Not Allowed")
    else:
        messagebox.showinfo("","Incorrect Username or Password")
global entry1
global entry2
ttk.Label(root,text="Username").place(x=70,y=20)
ttk.Label(root,text="Password").place(x=70,y=70)
entry1=Entry(root)
entry1.place(x=140,y=20)
entry2=Entry(root,show="*")
entry2.place(x=140,y=70)
ttk.Button(root,text="Login", command=login).place(x=135,y=120)
root.mainloop()
import sqlite3
from tkinter import *
from tkinter import ttk

root = Tk()
root.title('QUOI DE NEUF? PROJECT')
root.geometry('450x450')
root['bg']= 'light blue'
conn = sqlite3.connect('test_database')
c = conn.cursor()

c.execute('''
          CREATE TABLE IF NOT EXISTS quoi_de_neuf
          ([Id] INTEGER PRIMARY KEY, [Customer_name] TEXT, [Gender] TEXT,
          [Phone_no] INTEGER, [Address] TEXT)
          ''')
def backpg():
    root.destroy()
    import loginpage
def nextpg():
    root.destroy()
    import Page2
def save():
    conn = sqlite3.connect('test_database')
    c = conn.cursor()
    record_id = delete_box.get()
    c.execute("""
    UPDATE quoi_de_neuf SET
    Id= :Id,
    Customer_name= :Customer_name,
    Gender= :Gender,
    Phone_no= :Phone_no,
    Address= :Address
    WHERE oid = :oid""",
              {
                  "Id": Id_e.get(),
                  "Customer_name": Customer_name_e.get(),
                  "Gender": Gender_e.get(),
                  "Phone_no": Phone_no_e.get(),
                  "Address": Address_e.get(),
                  "oid": record_id
              }
              )
    conn.commit()
    conn.close()
    editor.destroy()
def edite():
    conn = sqlite3.connect('test_database')
    c = conn.cursor()
    record_id = delete_box.get();
    c.execute("""UPDATE quoi_de_neuf SET 
        Customer_name = :Customer,
        Gender = :Gender,
        Phone_no = :Phone_no,
        Address = :Address 
   WHERE Id = :Id""",
            {
            'Customer':Customer_name_e.get(),
            'Gender':Gender_e.get(),
            'Phone_no':Phone_no_e.get(),
            'Address':Address_e.get(),
            'Id': record_id,
            })
    conn.commit()
    conn.close()
    editor.destroy()
def update():
    global editor
    editor = Tk()
    editor.geometry('450x450')
    editor.title('Update Record')
    editor.geometry('450x450')
    conn = sqlite3.connect('test_database')
    c = conn.cursor()
    record_id = delete_box.get()
   c.execute("SELECT * FROM quoi_de_neuf WHERE oid = " + record_id)
    records = c.fetchall()
    # quoi_de_neuf
    # global variables
    global Id_e
    global Customer_name_e
    global Gender_e
    global Phone_no_e
    global Address_e
    # text boxes
    Id_e = Entry(editor, width=25)
    Id_e.grid(row=0, column=1, padx=20)
    Customer_name_e = Entry(editor, width=25)
    Customer_name_e.grid(row=1, column=1)
    Gender_e = Entry(editor, width=25)
    Gender_e.grid(row=2, column=1)
    Phone_no_e = Entry(editor, width=25)
    Phone_no_e.grid(row=3, column=1)
    Address_e = Entry(editor, width=25)
    Address_e.grid(row=4, column=1)
    # Text Labels
    Id_label = ttk.Label(editor, text="ID")
    Id_label.grid(row=0, column=0)
    Customer_name_label = Label(editor, text="Customer Name")
    Customer_name_label.grid(row=1, column=0)
    Gender_label = Label(editor, text="Gender")
    Gender_label.grid(row=2, column=0)
    Phone_no_label = Label(editor, text="Phone_no")
    Phone_no_label.grid(row=3, column=0)
    Address_label = Label(editor, text="Address")
    Address_label.grid(row=4, column=0)
    for record in records:
        Id_e.insert(0, record[0])
        Customer_name_e.insert(0, record[1])
        Gender_e.insert(0, record[2])
        Phone_no_e.insert(0, record[3])
        Address_e.insert(0, record[4])
    # save Button
    save_btn = ttk.Button(editor, text="Save Record", command=edite)
    save_btn.grid(row=5, column=0, columnspan=2, pady=10, padx=10, ipadx=145)
    conn.commit()
    conn.close()
def delete():
    conn = sqlite3.connect('test_database')
    c = conn.cursor()
    c.execute("DELETE from quoi_de_neuf WHERE oid = " + delete_box.get())
    conn.commit()
    conn.close()
# Create Submit Function for database
def submit():
    conn = sqlite3.connect('test_database')
    c = conn.cursor()
    # Insert into table
    c.execute("INSERT INTO quoi_de_neuf VALUES (:Id,:Customer_name,:Gender,:Phone_no,:Address)",
              {'Id': Id.get(),
               'Customer_name': Customer_name.get(),
               'Gender': Gender.get(),
               'Phone_no': Phone_no.get(),
               'Address': Address.get()
               })
    conn.commit()
    conn.close()
    Id.delete(0, END)
    Customer_name.delete(0, END)
    Gender.delete(0, END)
    Phone_no.delete(0, END)
    Address.delete(0, END)
# Create query function
def query():
    conn = sqlite3.connect('test_database')
    c = conn.cursor()
    c.execute('SELECT *,oid FROM quoi_de_neuf')  # oid is the primary key assigned by
    # sqlite3(auto increment)
    records = c.fetchall()
    print(records)
    print_records = " "
    for each in records:
        print_records += str(each) + "\n"
    query_label = Label(root, text=print_records)
    query_label.grid(row=12, column=0, columnspan=2)
    conn.commit()
    conn.close()
# Create text boxes
Id = Entry(root, width=25)
Id.grid(row=0, column=1, padx=20)
Customer_name = Entry(root, width=25)
Customer_name.grid(row=1, column=1)
Gender = Entry(root, width=25)
Gender.grid(row=2, column=1)
Phone_no = Entry(root, width=25)
Phone_no.grid(row=3, column=1)
Address = Entry(root, width=25)
Address.grid(row=4, column=1)
delete_box = Entry(root, width=30)
delete_box.grid(row=9, column=1)
# Create text box label
Id_label = Label(root, text="ID",bg="light blue")
Id_label.grid(row=0, column=0)
Customer_name_label = Label(root, text="Customer_name",bg="light blue")
Customer_name_label.grid(row=1, column=0)
Gender_label = Label(root, text="Gender",bg="light blue")
Gender_label.grid(row=2, column=0)
Phone_no_label = Label(root, text="Phone_no",bg="light blue")
Phone_no_label.grid(row=3, column=0)
Address_label = Label(root, text="Address",bg="light blue")
Address_label.grid(row=4, column=0)
delete_box_label = Label(root, text="Select ID",bg="light blue")
delete_box_label.grid(row=9, column=0)
# Create submit button
submit_btn = Button(root, text="Add Record", command=submit)
submit_btn.grid(row=5, column=0, columnspan=2, pady=10, padx=10, ipadx=100)
# Create a Show Button
query_btn = Button(root, text="Show Records", command=query)
query_btn.grid(row=12, column=0, columnspan=2, pady=10, padx=10, ipadx=95)
conn.commit()
# Delete Button
delete_btn = ttk.Button(root, text="Delete Record", command=delete)
delete_btn.grid(row=10, column=0, columnspan=2, pady=10, padx=10, ipadx=136)
# Update Button
update_btn = ttk.Button(root, text="Update Record", command=update)
update_btn.grid(row=11, column=0, columnspan=2, pady=10, padx=10, ipadx=136)
#next button
next_btn = ttk.Button(root, text="Next", command=nextpg)
next_btn.grid(row=13, column=0, columnspan=2, pady=10, padx=10, ipadx=141)
#back button
back_btn = ttk.Button(root, text="Back", command=backpg)
back_btn.grid(row=14, column=0, columnspan=2, pady=10, padx=10, ipadx=141)
conn.commit()
conn.close()
root.mainloop()

